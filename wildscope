#!/usr/bin/env bash 

rt="/ptv"
hrt="${rt}/healer"
source "${rt}/rtsetup.sh"

function help() {
echo -e "wildscope - submodule of subenum - healerenum - healer - get url scopes in stdin, and print out the domains which are wildcard scopes (Pass to subenum modules)

Usage:
\techo <scope> | wildscope

Examples:
\tcat scope.txt | ./wildscope
\t./inscopeurl -t semrush | ./wildscope
"
}
# Parsing flags
while [ -n "$1" ]; do
    key="$1"
    case "$key" in
      -h|--help)
        shift
        help;
        exit 0
        ;;
      --)
        shift
        break
        ;;
      -*|--*)
        echo "Unknown option: $1"
        sep
        help
        exit 1
        ;;
      *)
        echo "Unknown option: $1"
        sep
        help
        exit 1
        ;;
    esac
done

# Read from stdin, save it to variable domains
domains=$(cat -)
echo "domains: ${domains}"
# If no domains, exit
if [ -z "$domains" ]; then
    echo "No domains given in stdin"
    sep
    help
    exit 1
fi

# Remove duplicates from array
domains=($(printf "%s\n" "${domains[@]}" | sort -u))

# Loop through array and do sth on each line
for i in "${domains[@]}"
do
    # If the first character of the line is "*" then print this line 
    # Create a new array called wildcard_domains and add the wildcard domains to it (e.g. *.example.com) without the "*." at first 
    if [[ $i == \*.* ]]; then
        wildcard_domains+=("${i:2}")
    fi
done

# echo the wildcard domains
for i in "${wildcard_domains[@]}"
do
    # If $i is a vaild form domain then print it (e.g example.com)
    if [[ $i =~ ^[a-zA-Z0-9][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]\.[a-zA-Z]{2,}$ ]]; then
        echo "$i"
    fi
done
